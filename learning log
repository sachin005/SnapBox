28 May 2016
OrientationEventListener - used to determine when the device rotation has occurred. Mainly necessary when rotation is 180 degrees because in this case the onCreate or onConfigurationChanged is not called as the view diemensions remain the same.

StreamConfigurationMap - Immutable class to store the output stream configuration to set up Surfaces for creating a capture session with CameraDevice.createCaptureSession.

29 May 2016
To know if Rationale needs to be shown to the user, use
FragmentCompat.shouldShowRequestPermissionRational(Fragment, permission)
error: activity extends Fragment but passing this gives error

CameraCaptureSession - it is a configured capture session for a CameraDevice used for capturing images from the camera or for reprocessing the images captured from the camera in the same session previously.
It is created by createCaptureSession -- arguments -- set of target output surfaces or provide InputConfiguration and set of target output surfaces to createReprocessableCaptureSession for reprocessable capture session.
Once created, the session is active until a new session is created by the camera device or camera device is closed.

CameraCaptureSession.setRepeatingRequest() for providing a camera preview.
It makes the camera capture images continuosly at the maximum rate possible. Setting used are provided in the CaptureRequest

StreamConfigurationMap - Immutable class to store available stream configurations to setup Surfaces for creating a capture session with createCaptureSession(List, CameraCaptureSession.StateCallback, Handler)
This is authoritative list of all formats and sizes of those formats supported by the camera device.

Use proper output size for image capture -- largest possible - StreamConfigurationMap.getOutputSizes()

Set the view dimensions as per the device rotation relative to device orientaion and device sensor orientation

Make sure preview is not larger than display size or 1080p
Find the best possible preview size

Find rotation of device and reverse device orientation for front-facing camera

Initially output stream images from the Camera2 API will be rotated to the native device orientation from the sensor's orientation and the TextureView will default to scaling these buffers to fill its view bounds.
If the device orientation has been rotated relative to its native orientation so that the TextureView's dimensions are swapped relative to the native device orientation, we must do the following to ensure the output stream images are not incorrectly scaled by the TextureView:
- Undo the scale-to-fill from the output buffer's dimensions i.e. its dimensions in the native device orientation to the TextureView's dimension
- Apply a scale-to-fill from the output buffer's rotated dimensions i.e. its dimensions in the current device orientation to the TextureView's dimensions
- Apply the rotation from the native device orientation to the current device rotation

DngCreator class provides functions to write raw pixel data to DNG file.
This class is designed to be used with the ImageFormat.RAW_SENSOR buffers available from CameraDevice, or with Bayer-type raw pixel data that is otherwise generated by an application. The DNG metadata tags will be generated from a CaptureResult object or set directly.

Builder pattern used hence the ImageSaverBuilder class.

Message.obtain() - Return a new Message instance from the global pool. Allows us to avoid allocating new objects in many cases.

To check if device is a legacy device
CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL == CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY;

getParentFragment() - returns the parent fragment the current fragment is attached to. returns null if attached to an activity directly.

June 14 2016
To retrieve all images, use URI - MediaStorage.Images.Media.EXTERNAL_CONTENT_URI or
Environment.getExternalStorageDirectory()
- get list of file names, store the names and paths in string arrays and pass these arrays to the ImageAdapter. In the ImageAdapter, decodeFile into Bitmap and setImageBitmap to decoded image
- you can get Cursor using activity.getContentResolver().query() and get the same details (file name and file path). Manifest permission needed.
http://stackoverflow.com/questions/30777023/diplaying-all-images-from-device-inside-my-app
http://stackoverflow.com/questions/25957644/get-all-photos-from-android-device-android-programming

15 June 2016
while decoding file to bitmap, you might get OutofMemoryError. This is because the image is too big and loading multiple such images can quickly exceed the 19MB per app memory limit on most of the devices
https://developer.android.com/training/displaying-bitmaps/index.html
you can get the dimensions of the image without loading the actual image in the memory and accordingly load a scaled down version of that image.
https://developer.android.com/training/displaying-bitmaps/load-bitmap.html

20 June 2016
when creating a custom adapter for a listView by extending BaseAdapter, in the getView() method, we inflate the LayoutInflater
inflate method takes root as second parameter
root - Optional view to be the parent of the generated hierarchy (if attachToRoot is true), or else simply an object that provides a set of LayoutParams values for root of the returned hierarchy (if attachToRoot is false.)
********Find more on this method and how root works in it.********
